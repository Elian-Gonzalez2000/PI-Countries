{"version":3,"sources":["components/Nav.js","actions/index.js","components/CountryCard.js","components/Paginate.js","assest/loader.svg","components/Home.js","assest/world-banner-blue3.jpg","assest/find-map-banner.jpg","components/Init.js","components/ActivityCard.js","components/CountryDetails.js","components/FormActivities.js","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js"],"names":["NavBarContainer","styled","div","_templateObject","_taggedTemplateLiteral","NavBar","nav","_templateObject2","Nav","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsx","children","_jsxs","className","Link","to","Component","GET_COUNTRIES","ADD_ACTIVITY","GET_ACTIVITIES","GET_COUNTRIES_BY_NAME","ORDER_BY_NAME","FILTER_CONTINENT","FILTER_ACTIVITY","ORDER_BY_POBLATION","GET_LOAD_STATUS","connectionString","setLoadStatus","payload","type","getCountries","dispatch","fetch","concat","then","response","json","catch","err","CountryCardContainer","CountryImg","img","CountryCard","_ref","name","flagImg","continent","src","alt","PaginateUl","ul","PaginateLink","span","Paginado","countriesPage","allCountries","paginado","currentPage","pageNumbers","i","Math","ceil","push","map","number","undefined","onClick","initialState","Home","_useState","useState","countriesName","_useState2","_slicedToArray","input","setInput","_useState3","_useState4","errors","setErrors","countries","useSelector","state","allActivities","activities","isLoading","useDispatch","_useState5","_useState6","setCurrentPage","_useState7","_useState8","_useState9","filter","order","_useState10","setOrder","LastCountry","FirstCountry","currentCountries","slice","filterPoblation","useRef","filterSort","handleSort","e","preventDefault","target","current","selectedOptions","selected","firstElementChild","console","log","handleFilterPoblation","handleFilterContinent","handleFilterActivity","useEffect","getCountriesByName","style","minHeight","loading","onChange","_objectSpread","_defineProperty","test","validate","ref","event","activity","length","totalPages","country","ID","margin","InitContainer","section","BackgroundImage","props","image","BackgroundOpacity","aside","_templateObject3","opacityColor","ContainerContent","_templateObject4","backgroundColor","Grid","_templateObject5","gridColumns","Button","button","_templateObject6","Init","worldBannerBlue","findMapBanner","href","rel","ActivityCardContainer","ActivitiesP","p","ActivityCard","_Fragment","difficulty","duration","season","Details","DetailsP","DetailsImg","CountryDetails","id","useParams","details","setDetails","marginTop","marginBottom","subregion","capital","area","population","ContainerForm","ContainerInputs","SelectSeason","CountriesSelected","trim","error","FormActivity","duracion","dificultad","temporada","flagsImg","setFlagsImg","allcountries","handleChange","handleCheck","checked","handleSubmit","Swal","fire","icon","title","text","showCancelButton","confirmButtonText","result","isConfirmed","method","body","JSON","stringify","headers","res","data","onSubmit","findCountry","el","includes","_toConsumableArray","flag","countryID","handleSelect","flagID","filterFlag","deletedCountry","handleClickFlag","Footer","footer","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeStore","compose","store","createStore","actions","sortedCountries","sort","a","b","localeCompare","poblationFiltered","continentFilter","allCountriesAct","activitiesFilter","applyMiddleware","thunk","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.163b4fe3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavBarContainer = styled.div`\r\n   width: 100vw;\r\n   background-color: var(--first-color);\r\n`;\r\n\r\nconst NavBar = styled.nav`\r\n   width: 100%;\r\n   max-width: 1200px;\r\n   color: var(--gray-light-color);\r\n   margin: 0 auto;\r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n   padding: 1rem 1.5rem;\r\n\r\n   & a {\r\n      display: inline-block;\r\n      font-size: 1.25rem;\r\n      font-weight: bold;\r\n      padding: 0.5rem;\r\n      color: var(--text-light-color);\r\n      border-radius: 0.5rem;\r\n      cursor: pointer;\r\n      transition: ease all 0.3s;\r\n\r\n      & a:hover {\r\n         color: var(--gray-dark-color);\r\n         background-color: var(--gray-light-color);\r\n      }\r\n   }\r\n`;\r\n\r\nclass Nav extends Component {\r\n   render() {\r\n      return (\r\n         <NavBarContainer>\r\n            <NavBar>\r\n               <div className=\"logo\">\r\n                  <Link to=\"/\">Inicio</Link>\r\n               </div>\r\n               <div className=\"nav-links\">\r\n                  <Link to=\"/home\">Buscar Paises</Link>\r\n                  <Link to=\"/activity\">Crear Actividad</Link>\r\n               </div>\r\n            </NavBar>\r\n         </NavBarContainer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Nav;\r\n","export const GET_COUNTRIES = \"GET_COUNTRIES\";\r\nexport const ADD_ACTIVITY = \"ADD_ACTIVITY\";\r\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\r\nexport const GET_COUNTRIES_BY_NAME = \"GET_COUNTRIES_BY_NAME\";\r\n//export const GET_COUNTRY_DETAILS = \"GET_COUNTRY_DETAILS\";\r\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\r\nexport const FILTER_CONTINENT = \"FILTER_CONTINENT\";\r\nexport const FILTER_ACTIVITY = \"FILTER_ACTIVITY\";\r\nexport const ORDER_BY_POBLATION = \"ORDER_BY_POBLATION\";\r\nexport const GET_LOAD_STATUS = \"GET_LOAD_STATUS\";\r\nexport const connectionString = true\r\n   ? \"https://pi-countries-production-36d8.up.railway.app\"\r\n   : \"http://localhost:3001\";\r\n\r\nexport function setLoadStatus(payload) {\r\n   return {\r\n      type: GET_LOAD_STATUS,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function addActivity(payload) {\r\n   return { type: \"ADD_ACTIVITY\", payload };\r\n}\r\n\r\nexport function getCountries() {\r\n   return (dispatch) => {\r\n      dispatch(setLoadStatus(true));\r\n      return fetch(`${connectionString}/countries/`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            dispatch(setLoadStatus(false));\r\n            return dispatch({ type: GET_COUNTRIES, payload: json });\r\n         })\r\n         .catch((err) => {\r\n            //console.log(err);\r\n            dispatch(setLoadStatus(false));\r\n         });\r\n   };\r\n}\r\n\r\nexport function getCountriesByName(input) {\r\n   return (dispatch) => {\r\n      dispatch(setLoadStatus(true));\r\n      return fetch(`${connectionString}/countries?name=${input}`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            dispatch(setLoadStatus(false));\r\n            return dispatch({ type: GET_COUNTRIES_BY_NAME, payload: json });\r\n         })\r\n         .catch((err) => {\r\n            //console.log(err);\r\n            dispatch(setLoadStatus(false));\r\n         });\r\n   };\r\n}\r\n\r\n/* export function getCountryDetails(id) {\r\n  return (dispatch) => {\r\n    dispatch(setLoadStatus(true));\r\n    return fetch(`${connectionString}/countries/${id}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch(setLoadStatus(false));\r\n        return dispatch({ type: GET_COUNTRY_DETAILS, payload: json });\r\n      });\r\n  };\r\n}\r\n */\r\nexport function getActivities() {\r\n   return (dispatch) => {\r\n      return fetch(`${connectionString}/activity/`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            return dispatch({ type: GET_ACTIVITIES, payload: json });\r\n         });\r\n   };\r\n}\r\n\r\nexport function postActivities(payload) {\r\n   return (dispatch) => {\r\n      fetch(`${connectionString}/activity/`, {\r\n         method: \"POST\",\r\n         body: JSON.stringify(payload),\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n      })\r\n         .then((res) => res.json())\r\n         .catch((error) => console.error(\"Error:\", error))\r\n         .then((data) => {\r\n            //console.log(\"Success:\", data);\r\n            return data;\r\n         });\r\n   };\r\n}\r\n\r\nexport function orderName(payload) {\r\n   return {\r\n      type: ORDER_BY_NAME,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function orderByPoblation(payload) {\r\n   return {\r\n      type: ORDER_BY_POBLATION,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function filterByContinent(payload) {\r\n   return {\r\n      type: FILTER_CONTINENT,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function filterByActivity(payload) {\r\n   return {\r\n      type: FILTER_ACTIVITY,\r\n      payload,\r\n   };\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CountryCardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: var(--first-color);\r\n  color: var(--text-light-color);\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n  transition: ease transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n\r\n  & h4 {\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    margin-top: 1rem;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  & p {\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst CountryImg = styled.img`\r\n  && {\r\n    width: 120px;\r\n    height: 80px;\r\n  }\r\n`;\r\n\r\nconst CountryCard = ({ name, flagImg, continent }) => {\r\n  return (\r\n    <CountryCardContainer>\r\n      <CountryImg className=\"countryImg\" src={flagImg} alt={name} />\r\n      <h4>{name}</h4>\r\n      <p>{continent}</p>\r\n    </CountryCardContainer>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PaginateUl = styled.ul`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   justify-content: center;\r\n   align-items: center;\r\n\r\n   & li {\r\n      display: inline-block;\r\n      margin: 0 0.25rem 0.5rem 0.25rem;\r\n      padding: 0 0.25rem 0 0.25rem;\r\n      color: var(--gray-dark-color);\r\n      cursor: pointer;\r\n   }\r\n\r\n   & .active {\r\n      border: 1px solid var(--link-color);\r\n      border-radius: 2px;\r\n      color: var(--link-color);\r\n   }\r\n`;\r\n\r\nconst PaginateLink = styled.span`\r\n   transition: ease all 0.3s;\r\n   cursor: pointer;\r\n\r\n   &:hover {\r\n      color: var(--link-color);\r\n   }\r\n`;\r\n\r\nexport default function Paginado({\r\n   countriesPage,\r\n   allCountries,\r\n   paginado,\r\n   currentPage,\r\n}) {\r\n   const pageNumbers = [];\r\n\r\n   for (let i = 1; i <= Math.ceil(allCountries / countriesPage); i++) {\r\n      pageNumbers.push(i);\r\n   }\r\n\r\n   return (\r\n      <div className=\"paginate\">\r\n         <PaginateUl>\r\n            {pageNumbers &&\r\n               pageNumbers.map((number) => (\r\n                  <li\r\n                     key={number}\r\n                     className={number === currentPage ? \"active\" : undefined}\r\n                  >\r\n                     <PaginateLink onClick={() => paginado(number)}>\r\n                        {number}\r\n                     </PaginateLink>\r\n                  </li>\r\n               ))}\r\n         </PaginateUl>\r\n      </div>\r\n   );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.437555bc.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n   filterByActivity,\r\n   filterByContinent,\r\n   getActivities,\r\n   getCountries,\r\n   getCountriesByName,\r\n   orderByPoblation,\r\n   orderName,\r\n} from \"../actions/index\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginado from \"./Paginate\";\r\nimport \"./Home.css\";\r\nimport loading from \"../assest/loader.svg\";\r\n\r\nconst initialState = {\r\n   input: {\r\n      countriesName: \"\",\r\n   },\r\n   errors: {},\r\n};\r\n\r\nexport function validate(input) {\r\n   let errors = {};\r\n   if (!/^[a-z ,.'-]+$/i.test(input.countriesName) && input.countriesName) {\r\n      errors.countriesName = \"Pais invalido\";\r\n   }\r\n\r\n   return errors;\r\n}\r\n\r\nconst Home = () => {\r\n   const [input, setInput] = useState({\r\n      countriesName: \"\",\r\n   });\r\n\r\n   const [errors, setErrors] = useState(initialState.errors);\r\n   //const allCountries = useSelector((state)=>state.allCountries);\r\n   const countries = useSelector((state) => state.countries);\r\n   const allActivities = useSelector((state) => state.activities);\r\n   const isLoading = useSelector((state) => state.isLoading);\r\n   const dispatch = useDispatch();\r\n\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n\r\n   const [countriesPage, setCountriesPage] = useState(9);\r\n\r\n   const [order, setOrder] = useState({ filter: \"\", order: \"\" });\r\n   //Posicion del ultimo pais\r\n   const LastCountry = currentPage * countriesPage;\r\n   //Posicion del primer pais\r\n   const FirstCountry = LastCountry - countriesPage;\r\n   // Se divide el array de acuerdo a la cantidad de paises necesarios (9)\r\n   const currentCountries = countries.slice(FirstCountry, LastCountry);\r\n\r\n   const filterPoblation = useRef(null);\r\n   const filterSort = useRef(null);\r\n\r\n   const paginado = (totalPages) => {\r\n      setCurrentPage(totalPages);\r\n   };\r\n\r\n   function handleSort(e) {\r\n      e.preventDefault();\r\n      dispatch(orderName(e.target.value));\r\n      setCurrentPage(1);\r\n      if (\r\n         order.filter === \"poblation\" &&\r\n         filterPoblation.current.selectedOptions[0].value\r\n      ) {\r\n         filterPoblation.current.selectedOptions[0].selected = false;\r\n         filterPoblation.current.firstElementChild.selected = true;\r\n         console.log(\"sort\");\r\n      }\r\n      setOrder({ filter: `sort`, order: e.target.value });\r\n   }\r\n\r\n   const handleFilterPoblation = (e) => {\r\n      dispatch(orderByPoblation(e.target.value));\r\n      setCurrentPage(1);\r\n      if (\r\n         order.filter === \"sort\" &&\r\n         filterSort.current.selectedOptions[0].value\r\n      ) {\r\n         filterSort.current.selectedOptions[0].selected = false;\r\n         filterSort.current.firstElementChild.selected = true;\r\n      }\r\n      console.log(e.target);\r\n      setOrder({ filter: `poblation`, order: e.target.value });\r\n   };\r\n\r\n   function handleFilterContinent(e) {\r\n      e.preventDefault();\r\n      dispatch(filterByContinent(e.target.value));\r\n      setCurrentPage(1);\r\n      filterSort.current.firstElementChild.selected = true;\r\n      filterPoblation.current.firstElementChild.selected = true;\r\n   }\r\n\r\n   function handleFilterActivity(e) {\r\n      dispatch(filterByActivity(e.target.value));\r\n      filterSort.current.firstElementChild.selected = true;\r\n      filterPoblation.current.firstElementChild.selected = true;\r\n      //console.log(e.target.value)\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(getCountries());\r\n      dispatch(getActivities());\r\n   }, [dispatch]);\r\n\r\n   useEffect(() => {\r\n      if (!errors.countriesName) {\r\n         dispatch(getCountriesByName(input.countriesName));\r\n      }\r\n   }, [input.countriesName]);\r\n\r\n   const handleInputChange = (e) => {\r\n      setInput({\r\n         ...input,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n      //console.log(input);\r\n\r\n      setErrors(\r\n         validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n         })\r\n      );\r\n   };\r\n   //console.log(\"12\", countries);\r\n   return (\r\n      <div className=\"home container\" style={{ minHeight: \"100vh\" }}>\r\n         {isLoading && (\r\n            <div className=\"preloader\">\r\n               <img src={loading} alt=\"cargando...\" />\r\n            </div>\r\n         )}\r\n         <h2 className=\"margin-top text-center\">Consulte el Pais que Desee</h2>\r\n\r\n         <input\r\n            type=\"text\"\r\n            name=\"countriesName\"\r\n            value={input.countriesName}\r\n            onChange={handleInputChange}\r\n            className={errors.name && \"inputError\"}\r\n         />\r\n         {errors.countriesName && (\r\n            <p className=\"inputErrorMessage\">{errors.countriesName}</p>\r\n         )}\r\n         <div className=\"filterInputs\">\r\n            <select\r\n               ref={filterPoblation}\r\n               onChange={(e) => handleFilterPoblation(e)}\r\n            >\r\n               <option className=\"option\" value=\"0\">\r\n                  Ordenar por poblacion\r\n               </option>\r\n               <option value=\"asc\">Ascendente</option>\r\n               <option value=\"desc\">Descendente</option>\r\n            </select>\r\n            <select ref={filterSort} onChange={(event) => handleSort(event)}>\r\n               <option>Ordenar por nombre</option>\r\n               <option value=\"asc\">Ascendente</option>\r\n               <option value=\"desc\">Descendente</option>\r\n            </select>\r\n            <select onChange={(event) => handleFilterContinent(event)}>\r\n               <option value=\"All\">Todos</option>\r\n               <option value=\"Africa\">Africa</option>\r\n               <option value=\"North America\">America del Norte</option>\r\n               <option value=\"South America\">America del Sur</option>\r\n               <option value=\"Antarctica\">Antartica</option>\r\n               <option value=\"Asia\">Asia</option>\r\n               <option value=\"Europe\">Europa</option>\r\n               <option value=\"Oceania\">Oceania</option>\r\n            </select>\r\n            <select onChange={(event) => handleFilterActivity(event)}>\r\n               <option value=\"All\">Todas</option>\r\n               {allActivities &&\r\n                  allActivities.map((activity, i) => (\r\n                     <option key={i + activity.name} value={activity.name}>\r\n                        {activity.name}\r\n                     </option>\r\n                  ))}\r\n            </select>\r\n         </div>\r\n         <div className=\"pagination margin-top margin-bottom magin-auto\">\r\n            <Paginado\r\n               countriesPage={countriesPage}\r\n               allCountries={countries.length}\r\n               paginado={paginado}\r\n               currentPage={currentPage}\r\n            />\r\n         </div>\r\n         <div className=\"cardsCountries\">\r\n            {currentCountries &&\r\n            !errors.countriesName &&\r\n            typeof currentCountries != \"string\" ? (\r\n               currentCountries.map((country) => {\r\n                  return (\r\n                     <Link key={country.ID} to={`/home/${country.ID}`}>\r\n                        <CountryCard\r\n                           key={country.ID}\r\n                           name={country.name}\r\n                           flagImg={country.flagImg}\r\n                           continent={country.continent}\r\n                        />\r\n                     </Link>\r\n                  );\r\n               })\r\n            ) : typeof currentCountries == \"string\" ? (\r\n               <strong style={{ margin: \"auto\" }}>{\"Sin Coincidencias\"}</strong>\r\n            ) : null}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/world-banner-blue3.ff3447b0.jpg\";","export default __webpack_public_path__ + \"static/media/find-map-banner.f63bbcb3.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport worldBannerBlue from \"../assest/world-banner-blue3.jpg\";\r\nimport findMapBanner from \"../assest/find-map-banner.jpg\";\r\n\r\nconst InitContainer = styled.section`\r\n   display: flex;\r\n   flex-direction: column;\r\n`;\r\n\r\nconst BackgroundImage = styled.div`\r\n   position: relative;\r\n   background-color: var(--background-light);\r\n   background-image: url(${(props) => props.image});\r\n   background-position: center;\r\n   background-size: cover;\r\n   min-height: 100vh;\r\n   margin-bottom: 2rem;\r\n`;\r\n\r\nconst BackgroundOpacity = styled.aside`\r\n   background-color: ${(props) =>\r\n      props.opacityColor || \"var(--black-alpha-color)\"};\r\n   color: var(--text-light-color);\r\n   min-height: 100vh;\r\n   width: 100%;\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n`;\r\n\r\nconst ContainerContent = styled.section`\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   width: 95%;\r\n   max-width: var(--max-width);\r\n   min-height: 100vh;\r\n   background-color: ${(props) => props.backgroundColor || \"inherit\"};\r\n   margin: 0 auto 2rem auto;\r\n\r\n   .content-image {\r\n   }\r\n   .content-info {\r\n      h3 {\r\n         font-size: 1.25rem;\r\n         color: var(--first-color);\r\n      }\r\n\r\n      p {\r\n         letter-spacing: 1px;\r\n         line-height: 2rem;\r\n      }\r\n   }\r\n`;\r\n\r\nconst Grid = styled.div`\r\n   display: grid;\r\n   grid-template-columns: repeat(${(props) => props.gridColumns}, 1fr);\r\n   justify-content: space-between;\r\n   align-content: center;\r\n   gap: 3rem;\r\n\r\n   h2 {\r\n      grid-column: span ${(props) => props.gridColumns};\r\n   }\r\n`;\r\nconst Button = styled.button`\r\n   display: inline-block;\r\n   font-size: 1.2rem;\r\n   padding: 0.75rem 1.5rem;\r\n   margin-top: 2.5rem;\r\n   color: var(--text-light-color);\r\n   background-color: var(--first-color);\r\n   border: 1px solid var(--first-color);\r\n   border-radius: 5px;\r\n   text-align: center;\r\n   cursor: pointer;\r\n   outline: none;\r\n   transition: 0.3s ease-in-out all;\r\n\r\n   &:hover {\r\n      color: var(--first-color);\r\n      background-color: var(--white-color);\r\n   }\r\n`;\r\n\r\nconst Init = () => {\r\n   return (\r\n      <InitContainer>\r\n         <BackgroundImage image={worldBannerBlue}>\r\n            <BackgroundOpacity>\r\n               <h1>Bienvenid@ a InfoCountries</h1>\r\n               <Link to={\"/home\"}>\r\n                  <Button>Comenzar ya</Button>\r\n               </Link>\r\n            </BackgroundOpacity>\r\n         </BackgroundImage>\r\n         <ContainerContent>\r\n            <Grid gridColumns=\"2\">\r\n               <h2 className=\"text-center margin-top margin-bottom\">\r\n                  ¿Que puedo hacer en esta aplicación?\r\n               </h2>\r\n               <div className=\"content-image\">\r\n                  <img src={findMapBanner} alt=\"Find Map Banner\" />\r\n               </div>\r\n               <div className=\"content-info\">\r\n                  <h3>Buscar paises</h3>\r\n                  <p>\r\n                     Busca el pais que quieras entre un numero de mas de 200\r\n                     paises ofrecidos por la API de restcountries, seras capaz\r\n                     de encontrarlo mediante el nombre e iniciales del mismo,\r\n                     incluso puedes filtrar los paises utilizando las opciones\r\n                     que ofrece esta aplicacion para facilitar el procesos de\r\n                     busqueda, entre estas opciones estan el filtrado por\r\n                     continente, orden alfabetico o poblacion.\r\n                  </p>\r\n                  <a\r\n                     href=\"https://restcountries.com\"\r\n                     target=\"_blank\"\r\n                     rel=\"noreferrer\"\r\n                  >\r\n                     <Button>Restcountries</Button>\r\n                  </a>\r\n               </div>\r\n            </Grid>\r\n         </ContainerContent>\r\n         {/* <BackgroundImage image={findMapBanner}>\r\n            <BackgroundOpacity opacityColor=\"rgba(0, 0, 0, 0.85)\">\r\n               <Grid gridColumn=\"2\">\r\n                  <h1>Bienvenid@ a InfoCountries</h1>\r\n                  <Button>Comenzar ya</Button>\r\n               </Grid>\r\n            </BackgroundOpacity>\r\n         </BackgroundImage> */}\r\n      </InitContainer>\r\n   );\r\n};\r\n\r\nexport default Init;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ActivityCardContainer = styled.div`\r\n   text-align: left;\r\n   width: 47%;\r\n   padding: 0 1rem;\r\n`;\r\n\r\nconst ActivitiesP = styled.p`\r\n   font-size: 1.15rem;\r\n   margin-bottom: 0.5rem;\r\n   letter-spacing: 2px;\r\n`;\r\n\r\nconst ActivityCard = (activity) => {\r\n   return (\r\n      <>\r\n         {activity && (\r\n            <ActivityCardContainer>\r\n               <ActivitiesP>\r\n                  <strong>Actividad: </strong>\r\n                  {activity.name}\r\n               </ActivitiesP>\r\n               <ActivitiesP>\r\n                  <strong>Dificultad: </strong>\r\n                  {activity.difficulty || \"No definida\"}\r\n               </ActivitiesP>\r\n               <ActivitiesP>\r\n                  <strong>Duracion: </strong>\r\n                  {activity.duration || \"No definida\"}\r\n               </ActivitiesP>\r\n               <ActivitiesP>\r\n                  <strong>Temporada: </strong>\r\n                  {activity.season || \"No definida\"}\r\n               </ActivitiesP>\r\n            </ActivityCardContainer>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default ActivityCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connectionString, setLoadStatus } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport loading from \"../assest/loader.svg\";\r\n\r\nconst Details = styled.div`\r\n   width: 95%;\r\n   display: grid;\r\n   grid-template-columns: ${({ activities }) =>\r\n      activities ? \"repeat(2, 1fr)\" : \"repeat(1, 1fr)\"};\r\n   justify-content: space-around;\r\n   gap: 1rem;\r\n   margin: 2rem auto;\r\n\r\n   & .activitiesCard {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: space-between;\r\n   }\r\n`;\r\n\r\nconst DetailsP = styled.p`\r\n   font-size: 1.15rem;\r\n   margin-bottom: 0.5rem;\r\n   letter-spacing: 2px;\r\n`;\r\n\r\nconst DetailsImg = styled.img`\r\n   width: 100%;\r\n   max-width: 350px;\r\n   margin-top: 1rem;\r\n`;\r\n\r\nconst CountryDetails = () => {\r\n   const { id } = useParams();\r\n   const [details, setDetails] = useState({});\r\n   const isLoading = useSelector((state) => state.isLoading);\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(setLoadStatus(true));\r\n      fetch(`${connectionString}/countries/${id}`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            dispatch(setLoadStatus(false));\r\n            return setDetails(json);\r\n         })\r\n         .catch((err) => console.log(err));\r\n   }, [id]);\r\n\r\n   //console.log(details);\r\n   return (\r\n      <div\r\n         className=\"countryDetails container margin-auto\"\r\n         style={{ minHeight: \"100vh\" }}\r\n      >\r\n         {isLoading && (\r\n            <div className=\"preloader\">\r\n               {\" \"}\r\n               <img src={loading} alt=\"cargando...\" />\r\n            </div>\r\n         )}\r\n         <h2\r\n            className=\"text-center\"\r\n            style={{ marginTop: \"2.5rem\", marginBottom: \"2.5rem\" }}\r\n         >{`Detalles del pais ${details.name}`}</h2>\r\n         <Details\r\n            activities={\r\n               details.activities && !details.activities[0] ? false : true\r\n            }\r\n         >\r\n            <div>\r\n               <DetailsP>\r\n                  <strong>Identificador de pais: </strong> {details.ID}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Nombre: </strong> {details.name}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Subregion: </strong> {details.subregion}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Capita: </strong> {details.capital}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Continente: </strong> {details.continent}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Area: </strong> {details.area + \" km2\"}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Poblacion: </strong> {details.population}\r\n               </DetailsP>\r\n               <DetailsImg src={details.flagImg} alt={details.name} />\r\n            </div>\r\n            <div className=\"activitiesCard\">\r\n               {details.activities &&\r\n                  details.activities.map((activities) => {\r\n                     return (\r\n                        <ActivityCard\r\n                           key={details.ID}\r\n                           name={activities.name}\r\n                           difficulty={activities.difficulty}\r\n                           season={activities.season}\r\n                           duration={activities.duration}\r\n                        />\r\n                     );\r\n                  })}\r\n            </div>\r\n         </Details>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { postActivities, getCountries } from \"../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ContainerForm = styled.div`\r\n   margin-top: 2rem;\r\n   min-height: 100vh;\r\n\r\n   h2 {\r\n      color: var(--first-color);\r\n   }\r\n\r\n   form {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: space-between;\r\n\r\n      .btnSubmit {\r\n         width: 30%;\r\n         height: 100%;\r\n         font-size: 1rem;\r\n         padding: 0.5rem 1rem;\r\n         margin-top: 2.5rem;\r\n         color: var(--text-light-color);\r\n         background-color: var(--first-color);\r\n         border: 1px solid var(--first-color);\r\n         border-radius: 5px;\r\n         text-align: center;\r\n         cursor: pointer;\r\n         outline: none;\r\n         transition: 0.3s ease-in-out all;\r\n\r\n         &:hover {\r\n            color: var(--first-color);\r\n            background-color: var(--white-color);\r\n         }\r\n      }\r\n   }\r\n\r\n   label {\r\n      display: block;\r\n      font-size: 1.2rem;\r\n      font-weight: bold;\r\n      margin-top: 1.5rem;\r\n      margin-bottom: 1rem;\r\n   }\r\n`;\r\n\r\nconst ContainerInputs = styled.div`\r\n   width: 47%;\r\n\r\n   .activityName {\r\n      width: 100%;\r\n      margin-bottom: 1.5rem;\r\n      text-align: left;\r\n\r\n      input {\r\n         width: 80%;\r\n         margin-left: 0;\r\n         margin-right: 0;\r\n         box-shadow: 2px 1px 4px var(--black-alpha-color);\r\n      }\r\n\r\n      .inputError {\r\n         border: solid 2px #df1313;\r\n      }\r\n\r\n      .inputErrorMessage {\r\n         width: 80%;\r\n      }\r\n   }\r\n\r\n   .duration,\r\n   .selectDifficulty,\r\n   .selectCountries {\r\n      width: 100%;\r\n   }\r\n`;\r\n\r\nconst SelectSeason = styled.div`\r\n   width: 47%;\r\n   heigth: 100%;\r\n   padding: 2rem 0 0 1rem;\r\n\r\n   input {\r\n      display: inline-block;\r\n      margin-right: 1rem;\r\n   }\r\n\r\n   label {\r\n      cursor: pointer;\r\n   }\r\n`;\r\n\r\nconst CountriesSelected = styled.div`\r\n   width: 47%;\r\n   order: 1;\r\n   margin-top: -4rem;\r\n\r\n   li {\r\n      display: inline-block;\r\n      width: 50px;\r\n      margin: 0.5rem;\r\n      cursor: pointer;\r\n   }\r\n`;\r\n\r\nexport function validate(input) {\r\n   let errors = {};\r\n   if (!input.name.trim()) {\r\n      errors.name = \"Nombre de actividad es requerido\";\r\n      errors.error = true;\r\n   } else if (!/^[a-z ,.'-]+$/i.test(input.name.trim())) {\r\n      errors.name = \"Actividad invalida\";\r\n      errors.error = true;\r\n   } else if (input.countries.length === 0) {\r\n      errors.countries = \"Debe escoger al menos un pais para la actividad\";\r\n   } else if (!errors.name && !errors.countries) {\r\n      errors.error = false;\r\n   }\r\n\r\n   return errors;\r\n}\r\n\r\nexport const FormActivity = () => {\r\n   const dispatch = useDispatch();\r\n   const [errors, setErrors] = useState({\r\n      name: \"\",\r\n      countries: [],\r\n      error: true,\r\n   });\r\n   const [input, setInput] = useState({\r\n      countries: [],\r\n      name: \"\",\r\n      duracion: \"\",\r\n      dificultad: \"\",\r\n      temporada: \"\",\r\n   });\r\n   const [flagsImg, setFlagsImg] = useState([]);\r\n   const allcountries = useSelector((state) => state.allCountries);\r\n\r\n   const handleChange = (e) => {\r\n      setInput({\r\n         ...input,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      setErrors(\r\n         validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n         })\r\n      );\r\n   };\r\n\r\n   const handleSelect = (e) => {\r\n      let findCountry =\r\n         allcountries && allcountries.filter((el) => el.ID === e.target.value);\r\n      if (!input.countries.includes(e.target.value)) {\r\n         setFlagsImg([\r\n            ...flagsImg,\r\n            { flag: findCountry[0].flagImg, countryID: findCountry[0].ID },\r\n         ]);\r\n         //console.log(findCountry);\r\n\r\n         setInput({\r\n            ...input,\r\n            countries: [...input.countries, e.target.value],\r\n         });\r\n         setErrors(\r\n            validate({\r\n               ...input,\r\n               countries: [...input.countries, e.target.value],\r\n            })\r\n         );\r\n      }\r\n   };\r\n\r\n   const handleCheck = (e) => {\r\n      if (e.target.checked) {\r\n         setInput({\r\n            ...input,\r\n            temporada: e.target.value,\r\n         });\r\n      }\r\n\r\n      setErrors(\r\n         validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n         })\r\n      );\r\n   };\r\n\r\n   const handleClickFlag = (flagID) => {\r\n      let filterFlag =\r\n         flagsImg && flagsImg.filter((el) => el.countryID !== flagID);\r\n\r\n      setFlagsImg([...filterFlag]);\r\n\r\n      let deletedCountry = input.countries.filter((el) => el !== flagID);\r\n      console.log(flagID, filterFlag, deletedCountry);\r\n\r\n      setInput({\r\n         ...input,\r\n         countries: [...deletedCountry],\r\n      });\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setErrors(\r\n         validate({\r\n            ...input,\r\n         })\r\n      );\r\n      //console.log(input);\r\n      if (errors.error) {\r\n         Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: \"Ingrese los datos correctamente\",\r\n         });\r\n      } else {\r\n         Swal.fire({\r\n            title: \"¿Quieres guardar la actividad?\",\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Guardar\",\r\n         }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n               dispatch(postActivities(input));\r\n               setInput({\r\n                  countries: [],\r\n                  name: \"\",\r\n                  duracion: \"\",\r\n                  dificultad: \"\",\r\n                  temporada: \"\",\r\n               });\r\n               setFlagsImg([]);\r\n               Swal.fire(\"¡Actividad guardada!\", \"\", \"success\");\r\n            }\r\n         });\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      dispatch(getCountries());\r\n   }, [dispatch]);\r\n\r\n   //console.log(allcountries);\r\n\r\n   return (\r\n      <div className=\"formActivities container margin-auto\">\r\n         <ContainerForm>\r\n            <h2>Crea tu Actividad </h2>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n               <ContainerInputs>\r\n                  <div className=\"activityName\">\r\n                     <label>Actividad:</label>\r\n                     <input\r\n                        className={`inputActivity ${\r\n                           errors.name && \"inputError\"\r\n                        }`}\r\n                        type=\"text\"\r\n                        value={input.name}\r\n                        name=\"name\"\r\n                        onChange={(e) => handleChange(e)}\r\n                     />\r\n                     {errors.name && (\r\n                        <p className=\"inputErrorMessage\">{errors.name}</p>\r\n                     )}\r\n                  </div>\r\n\r\n                  <div className=\"selectCountries\">\r\n                     <label>Pais:</label>\r\n                     <select onChange={(e) => handleSelect(e)}>\r\n                        {/*  <option value=\"0\">Select Country</option> */}\r\n                        {allcountries &&\r\n                           allcountries.map((country, i) => {\r\n                              return (\r\n                                 <option\r\n                                    value={country.ID}\r\n                                    key={country.ID + \"countryOption\"}\r\n                                 >\r\n                                    {country.name}\r\n                                 </option>\r\n                              );\r\n                           })}\r\n                     </select>\r\n                     {errors.countries && (\r\n                        <p className=\"inputErrorMessage\">{errors.countries}</p>\r\n                     )}\r\n                  </div>\r\n\r\n                  <div className=\"duration\">\r\n                     <label>Duracion:</label>\r\n                     <select\r\n                        name=\"duracion\"\r\n                        value={input.duracion}\r\n                        onChange={(e) => handleChange(e)}\r\n                     >\r\n                        <option value=\"0\">Seleccionar Duración</option>\r\n                        <option value=\"30\">30 min</option>\r\n                        <option value=\"1\">1 horas</option>\r\n                        <option value=\"2\">2 horas</option>\r\n                        <option value=\"3\">3 horas</option>\r\n                        <option value=\"4\">4 horas</option>\r\n                        <option value=\"5\">mas de 5 hours</option>\r\n                     </select>\r\n                  </div>\r\n                  <div className=\"selectDifficulty\">\r\n                     <label>Dificultad:</label>\r\n                     <select\r\n                        name=\"dificultad\"\r\n                        value={input.dificultad}\r\n                        onChange={(e) => handleChange(e)}\r\n                     >\r\n                        <option value=\"0\">Seleccionar Dificultad</option>\r\n                        <option value=\"1\">1- Inicial</option>\r\n                        <option value=\"2\">2- Baja</option>\r\n                        <option value=\"3\">3- Media</option>\r\n                        <option value=\"4\">4- Dificil</option>\r\n                        <option value=\"5\">5- Profesional</option>\r\n                     </select>\r\n                  </div>\r\n               </ContainerInputs>\r\n               <SelectSeason>\r\n                  <label>Temporada: </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Verano\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Verano{\" \"}\r\n                  </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Primavera\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Primavera{\" \"}\r\n                  </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Otoño\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Otoño{\" \"}\r\n                  </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Invierno\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Invierno{\" \"}\r\n                  </label>\r\n               </SelectSeason>\r\n               <CountriesSelected>\r\n                  <ul>\r\n                     {input.countries &&\r\n                        flagsImg.map((el) => {\r\n                           return (\r\n                              <li key={el.countryID + \"flagCountry\"}>\r\n                                 <img\r\n                                    src={el.flag}\r\n                                    alt={\"Flag\" + el.countryID}\r\n                                    onClick={() =>\r\n                                       handleClickFlag(el.countryID)\r\n                                    }\r\n                                 />\r\n                              </li>\r\n                           );\r\n                        })}\r\n                  </ul>\r\n               </CountriesSelected>\r\n\r\n               <button className=\"btnSubmit\" type=\"submit\">\r\n                  Crear Actividad\r\n               </button>\r\n            </form>\r\n         </ContainerForm>\r\n      </div>\r\n   );\r\n};\r\n","import \"./App.css\";\r\nimport Nav from \"./components/Nav.js\";\r\nimport Home from \"./components/Home.js\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Init from \"./components/Init.js\";\r\nimport CountryDetails from \"./components/CountryDetails\";\r\nimport { FormActivity } from \"./components/FormActivities\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Footer = styled.footer`\r\n   background-color: var(--gray-dark-color);\r\n   color: var(--text-light-color);\r\n   display: flex;\r\n   justify-content: center;\r\n   width: 100vw;\r\n   padding: 3rem 0;\r\n`;\r\n\r\nfunction App() {\r\n   return (\r\n      <div className=\"App\">\r\n         <Router>\r\n            <Nav />\r\n            <Routes>\r\n               <Route path=\"/\" element={<Init />} />\r\n               <Route path=\"/home\" element={<Home />} />\r\n               <Route path=\"/home/:id\" element={<CountryDetails />} />\r\n               <Route path=\"/activity\" element={<FormActivity />} />\r\n            </Routes>\r\n            <Footer>\r\n               <p className=\"text-center\">\r\n                  &copy; ecgonzalez | Todos los derechos reservados\r\n               </p>\r\n            </Footer>\r\n         </Router>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n   GET_COUNTRIES,\r\n   ADD_ACTIVITY,\r\n   GET_COUNTRIES_BY_NAME,\r\n   //  GET_COUNTRY_DETAILS,\r\n   GET_ACTIVITIES,\r\n   ORDER_BY_NAME,\r\n   FILTER_CONTINENT,\r\n   FILTER_ACTIVITY,\r\n   ORDER_BY_POBLATION,\r\n   GET_LOAD_STATUS,\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n   allCountries: [],\r\n   //\tcountryDetails: [],\r\n   countries: [],\r\n   activities: [],\r\n   isLoading: false,\r\n};\r\n\r\nexport default function rootReducer(state = initialState, actions) {\r\n   switch (actions.type) {\r\n      case GET_LOAD_STATUS:\r\n         return {\r\n            ...state,\r\n            isLoading: actions.payload,\r\n         };\r\n\r\n      case GET_COUNTRIES:\r\n         return {\r\n            ...state,\r\n            countries: actions.payload,\r\n            allCountries: actions.payload,\r\n         };\r\n\r\n      case ADD_ACTIVITY:\r\n         return { ...state };\r\n\r\n      case GET_COUNTRIES_BY_NAME:\r\n         return {\r\n            ...state,\r\n            countries: actions.payload,\r\n         };\r\n\r\n      /* \t\tcase GET_COUNTRY_DETAILS:\r\n\t\t\treturn {\r\n            ...state,\r\n            countryDetails: actions.payload,\r\n         };\r\n */\r\n      case GET_ACTIVITIES:\r\n         return {\r\n            ...state,\r\n            activities: actions.payload,\r\n         };\r\n\r\n      case ORDER_BY_NAME:\r\n         let sortedCountries =\r\n            actions.payload === \"asc\"\r\n               ? state.countries.sort((a, b) => a.name.localeCompare(b.name))\r\n               : actions.payload === \"desc\"\r\n               ? state.countries.sort((a, b) => b.name.localeCompare(a.name))\r\n               : state.countries;\r\n         return {\r\n            ...state,\r\n            countries: sortedCountries,\r\n         };\r\n\r\n      case ORDER_BY_POBLATION:\r\n         let poblationFiltered =\r\n            actions.payload === \"asc\"\r\n               ? state.countries.sort((a, b) => a.population - b.population)\r\n               : actions.payload === \"desc\"\r\n               ? state.countries.sort((a, b) => b.population - a.population)\r\n               : state.countries;\r\n\r\n         return {\r\n            ...state,\r\n            countries: poblationFiltered,\r\n         };\r\n\r\n      case FILTER_CONTINENT:\r\n         const allCountries = state.allCountries;\r\n         const continentFilter =\r\n            actions.payload === \"All\"\r\n               ? allCountries\r\n               : allCountries.filter(\r\n                    (country) => country.continent === actions.payload\r\n                 );\r\n\r\n         return {\r\n            ...state,\r\n            countries: continentFilter,\r\n         };\r\n\r\n      case FILTER_ACTIVITY:\r\n         const allCountriesAct = state.allCountries;\r\n         const activitiesFilter =\r\n            actions.payload === \"All\"\r\n               ? allCountriesAct\r\n               : allCountriesAct.filter(\r\n                    (country) =>\r\n                       country.activities &&\r\n                       country.activities\r\n                          .map((el) => el.name)\r\n                          .includes(actions.payload)\r\n                 );\r\n\r\n         return {\r\n            ...state,\r\n            countries: activitiesFilter,\r\n         };\r\n\r\n      default:\r\n         return { ...state };\r\n   }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeStore = compose;\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeStore(applyMiddleware(thunk))\r\n\t)\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}