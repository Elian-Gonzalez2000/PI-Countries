{"version":3,"sources":["components/Nav.js","actions/index.js","components/CountryCard.js","components/Paginate.js","assest/loader.svg","components/Home.js","assest/world-banner-blue3.jpg","assest/find-map-banner.jpg","components/Init.js","components/ActivityCard.js","components/CountryDetails.js","components/FormActivities.js","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js"],"names":["NavBarContainer","styled","div","NavBar","nav","Nav","className","to","Component","GET_COUNTRIES","ADD_ACTIVITY","GET_ACTIVITIES","GET_COUNTRIES_BY_NAME","ORDER_BY_NAME","FILTER_CONTINENT","FILTER_ACTIVITY","ORDER_BY_POBLATION","GET_LOAD_STATUS","connectionString","setLoadStatus","payload","type","getCountries","dispatch","fetch","then","response","json","CountryCardContainer","CountryImg","img","CountryCard","name","flagImg","continent","src","alt","PaginateUl","ul","PaginateLink","span","Paginado","countriesPage","allCountries","paginado","currentPage","pageNumbers","i","Math","ceil","push","map","number","undefined","onClick","initialState","Home","useState","countriesName","input","setInput","errors","setErrors","countries","useSelector","state","allActivities","activities","isLoading","useDispatch","setCurrentPage","filter","order","setOrder","LastCountry","FirstCountry","currentCountries","slice","filterPoblation","useRef","filterSort","handleSort","e","preventDefault","target","value","current","selectedOptions","selected","firstElementChild","console","log","handleFilterPoblation","handleFilterContinent","handleFilterActivity","useEffect","getCountriesByName","style","minHeight","loading","onChange","test","validate","ref","event","activity","length","totalPages","country","ID","margin","InitContainer","section","BackgroundImage","props","image","BackgroundOpacity","aside","opacityColor","ContainerContent","backgroundColor","Grid","gridColumns","Button","button","Init","worldBannerBlue","findMapBanner","href","rel","ActivityCardContainer","ActivitiesP","p","ActivityCard","difficulty","duration","season","Details","DetailsP","DetailsImg","CountryDetails","id","useParams","details","setDetails","catch","err","marginTop","marginBottom","subregion","capital","area","population","ContainerForm","ContainerInputs","SelectSeason","CountriesSelected","FormActivity","duracion","dificultad","temporada","flagsImg","setFlagsImg","allcountries","handleChange","handleCheck","checked","handleSubmit","Swal","fire","title","showCancelButton","confirmButtonText","result","isConfirmed","method","body","JSON","stringify","headers","res","error","data","icon","text","onSubmit","findCountry","el","includes","flag","countryID","handleSelect","flagID","filterFlag","deletedCountry","handleClickFlag","disabled","Footer","footer","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeStore","compose","store","createStore","actions","sortedCountries","sort","a","b","localeCompare","poblationFiltered","continentFilter","allCountriesAct","activitiesFilter","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.715a5852.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavBarContainer = styled.div`\r\n   width: 100vw;\r\n   background-color: var(--first-color);\r\n`;\r\n\r\nconst NavBar = styled.nav`\r\n   width: 100%;\r\n   max-width: 1200px;\r\n   color: var(--gray-light-color);\r\n   margin: 0 auto;\r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n   padding: 1rem 1.5rem;\r\n\r\n   & a {\r\n      display: inline-block;\r\n      font-size: 1.25rem;\r\n      font-weight: bold;\r\n      padding: 0.5rem;\r\n      color: var(--text-light-color);\r\n      border-radius: 0.5rem;\r\n      cursor: pointer;\r\n      transition: ease all 0.3s;\r\n\r\n      & a:hover {\r\n         color: var(--gray-dark-color);\r\n         background-color: var(--gray-light-color);\r\n      }\r\n   }\r\n`;\r\n\r\nclass Nav extends Component {\r\n   render() {\r\n      return (\r\n         <NavBarContainer>\r\n            <NavBar>\r\n               <div className=\"logo\">\r\n                  <Link to=\"/\">Inicio</Link>\r\n               </div>\r\n               <div className=\"nav-links\">\r\n                  <Link to=\"/home\">Buscar Paises</Link>\r\n                  <Link to=\"/activity\">Crear Actividad</Link>\r\n               </div>\r\n            </NavBar>\r\n         </NavBarContainer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Nav;\r\n","export const GET_COUNTRIES = \"GET_COUNTRIES\";\r\nexport const ADD_ACTIVITY = \"ADD_ACTIVITY\";\r\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\r\nexport const GET_COUNTRIES_BY_NAME = \"GET_COUNTRIES_BY_NAME\";\r\n//export const GET_COUNTRY_DETAILS = \"GET_COUNTRY_DETAILS\";\r\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\r\nexport const FILTER_CONTINENT = \"FILTER_CONTINENT\";\r\nexport const FILTER_ACTIVITY = \"FILTER_ACTIVITY\";\r\nexport const ORDER_BY_POBLATION = \"ORDER_BY_POBLATION\";\r\nexport const GET_LOAD_STATUS = \"GET_LOAD_STATUS\";\r\nexport const connectionString = true\r\n   ? \"https://find-countries.herokuapp.com\"\r\n   : \"http://localhost:3001\";\r\n\r\nexport function setLoadStatus(payload) {\r\n   return {\r\n      type: GET_LOAD_STATUS,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function addActivity(payload) {\r\n   return { type: \"ADD_ACTIVITY\", payload };\r\n}\r\n\r\nexport function getCountries() {\r\n   return (dispatch) => {\r\n      dispatch(setLoadStatus(true));\r\n      return fetch(`${connectionString}/countries/`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            dispatch(setLoadStatus(false));\r\n            return dispatch({ type: GET_COUNTRIES, payload: json });\r\n         });\r\n   };\r\n}\r\n\r\nexport function getCountriesByName(input) {\r\n   return (dispatch) => {\r\n      dispatch(setLoadStatus(true));\r\n      return fetch(`${connectionString}/countries?name=${input}`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            dispatch(setLoadStatus(false));\r\n            return dispatch({ type: GET_COUNTRIES_BY_NAME, payload: json });\r\n         });\r\n   };\r\n}\r\n\r\n/* export function getCountryDetails(id) {\r\n  return (dispatch) => {\r\n    dispatch(setLoadStatus(true));\r\n    return fetch(`${connectionString}/countries/${id}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch(setLoadStatus(false));\r\n        return dispatch({ type: GET_COUNTRY_DETAILS, payload: json });\r\n      });\r\n  };\r\n}\r\n */\r\nexport function getActivities() {\r\n   return (dispatch) => {\r\n      return fetch(`${connectionString}/activity/`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            return dispatch({ type: GET_ACTIVITIES, payload: json });\r\n         });\r\n   };\r\n}\r\n\r\nexport function postActivities(payload) {\r\n   return (dispatch) => {\r\n      fetch(`${connectionString}/activity/`, {\r\n         method: \"POST\", // or \"PUT\"\r\n         body: JSON.stringify(payload), // data can be `string` or {object}!\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n      })\r\n         .then((res) => res.json())\r\n         .catch((error) => console.error(\"Error:\", error))\r\n         .then((data) => {\r\n            console.log(\"Success:\", data);\r\n            return data;\r\n         });\r\n   };\r\n}\r\n\r\nexport function orderName(payload) {\r\n   return {\r\n      type: ORDER_BY_NAME,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function orderByPoblation(payload) {\r\n   return {\r\n      type: ORDER_BY_POBLATION,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function filterByContinent(payload) {\r\n   return {\r\n      type: FILTER_CONTINENT,\r\n      payload,\r\n   };\r\n}\r\n\r\nexport function filterByActivity(payload) {\r\n   return {\r\n      type: FILTER_ACTIVITY,\r\n      payload,\r\n   };\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CountryCardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: var(--first-color);\r\n  color: var(--text-light-color);\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n  transition: ease transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n\r\n  & h4 {\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    margin-top: 1rem;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  & p {\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst CountryImg = styled.img`\r\n  && {\r\n    width: 120px;\r\n    height: 80px;\r\n  }\r\n`;\r\n\r\nconst CountryCard = ({ name, flagImg, continent }) => {\r\n  return (\r\n    <CountryCardContainer>\r\n      <CountryImg className=\"countryImg\" src={flagImg} alt={name} />\r\n      <h4>{name}</h4>\r\n      <p>{continent}</p>\r\n    </CountryCardContainer>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PaginateUl = styled.ul`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   justify-content: center;\r\n   align-items: center;\r\n\r\n   & li {\r\n      display: inline-block;\r\n      margin: 0 0.25rem 0.5rem 0.25rem;\r\n      padding: 0 0.25rem 0 0.25rem;\r\n      color: var(--gray-dark-color);\r\n      cursor: pointer;\r\n   }\r\n\r\n   & .active {\r\n      border: 1px solid var(--link-color);\r\n      border-radius: 2px;\r\n      color: var(--link-color);\r\n   }\r\n`;\r\n\r\nconst PaginateLink = styled.span`\r\n   transition: ease all 0.3s;\r\n   cursor: pointer;\r\n\r\n   &:hover {\r\n      color: var(--link-color);\r\n   }\r\n`;\r\n\r\nexport default function Paginado({\r\n   countriesPage,\r\n   allCountries,\r\n   paginado,\r\n   currentPage,\r\n}) {\r\n   const pageNumbers = [];\r\n\r\n   for (let i = 1; i <= Math.ceil(allCountries / countriesPage); i++) {\r\n      pageNumbers.push(i);\r\n   }\r\n\r\n   return (\r\n      <div className=\"paginate\">\r\n         <PaginateUl>\r\n            {pageNumbers &&\r\n               pageNumbers.map((number) => (\r\n                  <li\r\n                     key={number}\r\n                     className={number === currentPage ? \"active\" : undefined}\r\n                  >\r\n                     <PaginateLink onClick={() => paginado(number)}>\r\n                        {number}\r\n                     </PaginateLink>\r\n                  </li>\r\n               ))}\r\n         </PaginateUl>\r\n      </div>\r\n   );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.a8a2f98b.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n   filterByActivity,\r\n   filterByContinent,\r\n   getActivities,\r\n   getCountries,\r\n   getCountriesByName,\r\n   orderByPoblation,\r\n   orderName,\r\n} from \"../actions/index\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginado from \"./Paginate\";\r\nimport \"./Home.css\";\r\nimport loading from \"../assest/loader.svg\";\r\n\r\nconst initialState = {\r\n   input: {\r\n      countriesName: \"\",\r\n   },\r\n   errors: {},\r\n};\r\n\r\nexport function validate(input) {\r\n   let errors = {};\r\n   if (!/^[a-z ,.'-]+$/i.test(input.countriesName) && input.countriesName) {\r\n      errors.countriesName = \"Pais invalido\";\r\n   }\r\n\r\n   return errors;\r\n}\r\n\r\nconst Home = () => {\r\n   const [input, setInput] = useState({\r\n      countriesName: \"\",\r\n   });\r\n\r\n   const [errors, setErrors] = useState(initialState.errors);\r\n   //const allCountries = useSelector((state)=>state.allCountries);\r\n   const countries = useSelector((state) => state.countries);\r\n   const allActivities = useSelector((state) => state.activities);\r\n   const isLoading = useSelector((state) => state.isLoading);\r\n   const dispatch = useDispatch();\r\n\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n\r\n   const [countriesPage, setCountriesPage] = useState(9);\r\n\r\n   const [order, setOrder] = useState({ filter: \"\", order: \"\" });\r\n   //Posicion del ultimo pais\r\n   const LastCountry = currentPage * countriesPage;\r\n   //Posicion del primer pais\r\n   const FirstCountry = LastCountry - countriesPage;\r\n   // Se divide el array de acuerdo a la cantidad de paises necesarios (9)\r\n   const currentCountries = countries.slice(FirstCountry, LastCountry);\r\n\r\n   const filterPoblation = useRef(null);\r\n   const filterSort = useRef(null);\r\n\r\n   const paginado = (totalPages) => {\r\n      setCurrentPage(totalPages);\r\n   };\r\n\r\n   function handleSort(e) {\r\n      e.preventDefault();\r\n      dispatch(orderName(e.target.value));\r\n      setCurrentPage(1);\r\n      if (\r\n         order.filter === \"poblation\" &&\r\n         filterPoblation.current.selectedOptions[0].value\r\n      ) {\r\n         filterPoblation.current.selectedOptions[0].selected = false;\r\n         filterPoblation.current.firstElementChild.selected = true;\r\n         console.log(\"sort\");\r\n      }\r\n      setOrder({ filter: `sort`, order: e.target.value });\r\n   }\r\n\r\n   const handleFilterPoblation = (e) => {\r\n      dispatch(orderByPoblation(e.target.value));\r\n      setCurrentPage(1);\r\n      if (\r\n         order.filter === \"sort\" &&\r\n         filterSort.current.selectedOptions[0].value\r\n      ) {\r\n         filterSort.current.selectedOptions[0].selected = false;\r\n         filterSort.current.firstElementChild.selected = true;\r\n      }\r\n      console.log(e.target);\r\n      setOrder({ filter: `poblation`, order: e.target.value });\r\n   };\r\n\r\n   function handleFilterContinent(e) {\r\n      e.preventDefault();\r\n      dispatch(filterByContinent(e.target.value));\r\n      setCurrentPage(1);\r\n      filterSort.current.firstElementChild.selected = true;\r\n      filterPoblation.current.firstElementChild.selected = true;\r\n   }\r\n\r\n   function handleFilterActivity(e) {\r\n      dispatch(filterByActivity(e.target.value));\r\n      filterSort.current.firstElementChild.selected = true;\r\n      filterPoblation.current.firstElementChild.selected = true;\r\n      //console.log(e.target.value)\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(getCountries());\r\n      dispatch(getActivities());\r\n   }, [dispatch]);\r\n\r\n   useEffect(() => {\r\n      if (!errors.countriesName) {\r\n         dispatch(getCountriesByName(input.countriesName));\r\n      }\r\n   }, [input.countriesName]);\r\n\r\n   const handleInputChange = (e) => {\r\n      setInput({\r\n         ...input,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n      //console.log(input);\r\n\r\n      setErrors(\r\n         validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n         })\r\n      );\r\n   };\r\n   //console.log(\"12\", countries);\r\n   return (\r\n      <div className=\"home container\" style={{ minHeight: \"100vh\" }}>\r\n         {isLoading && (\r\n            <div className=\"preloader\">\r\n               <img src={loading} alt=\"cargando...\" />\r\n            </div>\r\n         )}\r\n         <h2 className=\"margin-top text-center\">Consulte el Pais que Desee</h2>\r\n\r\n         <input\r\n            type=\"text\"\r\n            name=\"countriesName\"\r\n            value={input.countriesName}\r\n            onChange={handleInputChange}\r\n            className={errors.name && \"inputError\"}\r\n         />\r\n         {errors.countriesName && (\r\n            <p className=\"inputErrorMessage\">{errors.countriesName}</p>\r\n         )}\r\n         <div className=\"filterInputs\">\r\n            <select\r\n               ref={filterPoblation}\r\n               onChange={(e) => handleFilterPoblation(e)}\r\n            >\r\n               <option className=\"option\" value=\"0\">\r\n                  Ordenar por poblacion\r\n               </option>\r\n               <option value=\"asc\">Ascendente</option>\r\n               <option value=\"desc\">Descendente</option>\r\n            </select>\r\n            <select ref={filterSort} onChange={(event) => handleSort(event)}>\r\n               <option>Ordenar por nombre</option>\r\n               <option value=\"asc\">Ascendente</option>\r\n               <option value=\"desc\">Descendente</option>\r\n            </select>\r\n            <select onChange={(event) => handleFilterContinent(event)}>\r\n               <option value=\"All\">Todos</option>\r\n               <option value=\"Africa\">Africa</option>\r\n               <option value=\"North America\">America del Norte</option>\r\n               <option value=\"South America\">America del Sur</option>\r\n               <option value=\"Antarctica\">Antartica</option>\r\n               <option value=\"Asia\">Asia</option>\r\n               <option value=\"Europe\">Europa</option>\r\n               <option value=\"Oceania\">Oceania</option>\r\n            </select>\r\n            <select onChange={(event) => handleFilterActivity(event)}>\r\n               <option value=\"All\">Todas</option>\r\n               {allActivities &&\r\n                  allActivities.map((activity, i) => (\r\n                     <option key={i} value={activity.name}>\r\n                        {activity.name}\r\n                     </option>\r\n                  ))}\r\n            </select>\r\n         </div>\r\n         <div className=\"pagination margin-top margin-bottom magin-auto\">\r\n            <Paginado\r\n               countriesPage={countriesPage}\r\n               allCountries={countries.length}\r\n               paginado={paginado}\r\n               currentPage={currentPage}\r\n            />\r\n         </div>\r\n         <div className=\"cardsCountries\">\r\n            {currentCountries &&\r\n            !errors.countriesName &&\r\n            typeof currentCountries != \"string\" ? (\r\n               currentCountries.map((country) => {\r\n                  return (\r\n                     <Link key={country.ID} to={`/home/${country.ID}`}>\r\n                        <CountryCard\r\n                           key={country.ID}\r\n                           name={country.name}\r\n                           flagImg={country.flagImg}\r\n                           continent={country.continent}\r\n                        />\r\n                     </Link>\r\n                  );\r\n               })\r\n            ) : typeof currentCountries == \"string\" ? (\r\n               <strong style={{ margin: \"auto\" }}>{\"Sin Coincidencias\"}</strong>\r\n            ) : null}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/world-banner-blue3.ff3447b0.jpg\";","export default __webpack_public_path__ + \"static/media/find-map-banner.f63bbcb3.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport worldBannerBlue from \"../assest/world-banner-blue3.jpg\";\r\nimport findMapBanner from \"../assest/find-map-banner.jpg\";\r\n\r\nconst InitContainer = styled.section`\r\n   display: flex;\r\n   flex-direction: column;\r\n`;\r\n\r\nconst BackgroundImage = styled.div`\r\n   position: relative;\r\n   background-color: var(--background-light);\r\n   background-image: url(${(props) => props.image});\r\n   background-position: center;\r\n   background-size: cover;\r\n   min-height: 100vh;\r\n   margin-bottom: 2rem;\r\n`;\r\n\r\nconst BackgroundOpacity = styled.aside`\r\n   background-color: ${(props) =>\r\n      props.opacityColor || \"var(--black-alpha-color)\"};\r\n   color: var(--text-light-color);\r\n   min-height: 100vh;\r\n   width: 100%;\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n`;\r\n\r\nconst ContainerContent = styled.section`\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   width: 95%;\r\n   max-width: var(--max-width);\r\n   min-height: 100vh;\r\n   background-color: ${(props) => props.backgroundColor || \"inherit\"};\r\n   margin: 0 auto 2rem auto;\r\n\r\n   .content-image {\r\n   }\r\n   .content-info {\r\n      h3 {\r\n         font-size: 1.25rem;\r\n         color: var(--first-color);\r\n      }\r\n\r\n      p {\r\n         letter-spacing: 1px;\r\n         line-height: 2rem;\r\n      }\r\n   }\r\n`;\r\n\r\nconst Grid = styled.div`\r\n   display: grid;\r\n   grid-template-columns: repeat(${(props) => props.gridColumns}, 1fr);\r\n   justify-content: space-between;\r\n   align-content: center;\r\n   gap: 3rem;\r\n\r\n   h2 {\r\n      grid-column: span ${(props) => props.gridColumns};\r\n   }\r\n`;\r\nconst Button = styled.button`\r\n   display: inline-block;\r\n   font-size: 1.2rem;\r\n   padding: 0.75rem 1.5rem;\r\n   margin-top: 2.5rem;\r\n   color: var(--text-light-color);\r\n   background-color: var(--first-color);\r\n   border: 1px solid var(--first-color);\r\n   border-radius: 5px;\r\n   text-align: center;\r\n   cursor: pointer;\r\n   outline: none;\r\n   transition: 0.3s ease-in-out all;\r\n\r\n   &:hover {\r\n      color: var(--first-color);\r\n      background-color: var(--white-color);\r\n   }\r\n`;\r\n\r\nconst Init = () => {\r\n   return (\r\n      <InitContainer>\r\n         <BackgroundImage image={worldBannerBlue}>\r\n            <BackgroundOpacity>\r\n               <h1>Bienvenid@ a InfoCountries</h1>\r\n               <Link to={\"/home\"}>\r\n                  <Button>Comenzar ya</Button>\r\n               </Link>\r\n            </BackgroundOpacity>\r\n         </BackgroundImage>\r\n         <ContainerContent>\r\n            <Grid gridColumns=\"2\">\r\n               <h2 className=\"text-center margin-top margin-bottom\">\r\n                  ¿Que puedo hacer en esta aplicación?\r\n               </h2>\r\n               <div className=\"content-image\">\r\n                  <img src={findMapBanner} alt=\"Find Map Banner\" />\r\n               </div>\r\n               <div className=\"content-info\">\r\n                  <h3>Buscar paises</h3>\r\n                  <p>\r\n                     Busca el pais que quieras entre un numero de mas de 200\r\n                     paises ofrecidos por la API de restcountries, seras capaz\r\n                     de encontrarlo mediante el nombre e iniciales del mismo,\r\n                     incluso puedes filtrar los paises utilizando las opciones\r\n                     que ofrece esta aplicacion para facilitar el procesos de\r\n                     busqueda, entre estas opciones estan el filtrado por\r\n                     continente, orden alfabetico o poblacion.\r\n                  </p>\r\n                  <a\r\n                     href=\"https://restcountries.com\"\r\n                     target=\"_blank\"\r\n                     rel=\"noreferrer\"\r\n                  >\r\n                     <Button>Restcountries</Button>\r\n                  </a>\r\n               </div>\r\n            </Grid>\r\n         </ContainerContent>\r\n         {/* <BackgroundImage image={findMapBanner}>\r\n            <BackgroundOpacity opacityColor=\"rgba(0, 0, 0, 0.85)\">\r\n               <Grid gridColumn=\"2\">\r\n                  <h1>Bienvenid@ a InfoCountries</h1>\r\n                  <Button>Comenzar ya</Button>\r\n               </Grid>\r\n            </BackgroundOpacity>\r\n         </BackgroundImage> */}\r\n      </InitContainer>\r\n   );\r\n};\r\n\r\nexport default Init;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ActivityCardContainer = styled.div`\r\n  text-align: left;\r\n  width: 47%;\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst ActivitiesP = styled.p`\r\n  font-size: 1.15rem;\r\n  margin-bottom: 0.5rem;\r\n  letter-spacing: 2px;\r\n`;\r\n\r\nconst ActivityCard = (activity) => {\r\n  return (\r\n    <>\r\n      {activity && (\r\n        <ActivityCardContainer>\r\n          <ActivitiesP>\r\n            <strong>Actividad: </strong>\r\n            {activity.name}\r\n          </ActivitiesP>\r\n          <ActivitiesP>\r\n            <strong>Dificultad: </strong>\r\n            {activity.difficulty}\r\n          </ActivitiesP>\r\n          <ActivitiesP>\r\n            <strong>Duracion: </strong>\r\n            {activity.duration}\r\n          </ActivitiesP>\r\n          <ActivitiesP>\r\n            <strong>Temporada: </strong>\r\n            {activity.season}\r\n          </ActivitiesP>\r\n        </ActivityCardContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connectionString, setLoadStatus } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport ActivityCard from \"./ActivityCard\";\r\nimport loading from \"../assest/loader.svg\";\r\n\r\nconst Details = styled.div`\r\n   width: 95%;\r\n   display: grid;\r\n   grid-template-columns: ${({ activities }) =>\r\n      activities ? \"repeat(2, 1fr)\" : \"repeat(1, 1fr)\"};\r\n   justify-content: space-around;\r\n   gap: 1rem;\r\n   margin: 2rem auto;\r\n\r\n   & .activitiesCard {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: space-between;\r\n   }\r\n`;\r\n\r\nconst DetailsP = styled.p`\r\n   font-size: 1.15rem;\r\n   margin-bottom: 0.5rem;\r\n   letter-spacing: 2px;\r\n`;\r\n\r\nconst DetailsImg = styled.img`\r\n   width: 100%;\r\n   max-width: 350px;\r\n   margin-top: 1rem;\r\n`;\r\n\r\nconst CountryDetails = () => {\r\n   const { id } = useParams();\r\n   const [details, setDetails] = useState({});\r\n   const isLoading = useSelector((state) => state.isLoading);\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(setLoadStatus(true));\r\n      fetch(`${connectionString}/countries/${id}`)\r\n         .then((response) => response.json())\r\n         .then((json) => {\r\n            dispatch(setLoadStatus(false));\r\n            return setDetails(json);\r\n         })\r\n         .catch((err) => console.log(err));\r\n   }, [id]);\r\n\r\n   //console.log(details);\r\n   return (\r\n      <div\r\n         className=\"countryDetails container margin-auto\"\r\n         style={{ minHeight: \"100vh\" }}\r\n      >\r\n         {isLoading && (\r\n            <div className=\"preloader\">\r\n               {\" \"}\r\n               <img src={loading} alt=\"cargando...\" />\r\n            </div>\r\n         )}\r\n         <h2\r\n            className=\"text-center\"\r\n            style={{ marginTop: \"2.5rem\", marginBottom: \"2.5rem\" }}\r\n         >{`Detalles del pais ${details.name}`}</h2>\r\n         <Details\r\n            activities={\r\n               details.activities && !details.activities[0] ? false : true\r\n            }\r\n         >\r\n            <div>\r\n               <DetailsP>\r\n                  <strong>Identificador de pais: </strong> {details.ID}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Nombre: </strong> {details.name}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Subregion: </strong> {details.subregion}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Capita: </strong> {details.capital}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Continente: </strong> {details.continent}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Area: </strong> {details.area + \" km2\"}\r\n               </DetailsP>\r\n               <DetailsP>\r\n                  <strong>Poblacion: </strong> {details.population}\r\n               </DetailsP>\r\n               <DetailsImg src={details.flagImg} alt={details.name} />\r\n            </div>\r\n            <div className=\"activitiesCard\">\r\n               {details.activities &&\r\n                  details.activities.map((activities) => {\r\n                     return (\r\n                        <ActivityCard\r\n                           key={details.ID}\r\n                           name={activities.name}\r\n                           difficulty={activities.difficulty}\r\n                           season={activities.season}\r\n                           duration={activities.duration}\r\n                        />\r\n                     );\r\n                  })}\r\n            </div>\r\n         </Details>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { postActivities, getCountries } from \"../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ContainerForm = styled.div`\r\n   margin-top: 2rem;\r\n   min-height: 100vh;\r\n\r\n   h2 {\r\n      color: var(--first-color);\r\n   }\r\n\r\n   form {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: space-between;\r\n\r\n      .btnSubmit {\r\n         width: 30%;\r\n         height: 100%;\r\n         font-size: 1rem;\r\n         padding: 0.5rem 1rem;\r\n         margin-top: 2.5rem;\r\n         color: var(--text-light-color);\r\n         background-color: var(--first-color);\r\n         border: 1px solid var(--first-color);\r\n         border-radius: 5px;\r\n         text-align: center;\r\n         cursor: pointer;\r\n         outline: none;\r\n         transition: 0.3s ease-in-out all;\r\n\r\n         &:hover {\r\n            color: var(--first-color);\r\n            background-color: var(--white-color);\r\n         }\r\n      }\r\n   }\r\n\r\n   label {\r\n      display: block;\r\n      font-size: 1.2rem;\r\n      font-weight: bold;\r\n      margin-top: 1.5rem;\r\n      margin-bottom: 1rem;\r\n   }\r\n`;\r\n\r\nconst ContainerInputs = styled.div`\r\n   width: 47%;\r\n\r\n   .activityName {\r\n      width: 100%;\r\n      margin-bottom: 1.5rem;\r\n      text-align: left;\r\n\r\n      input {\r\n         width: 80%;\r\n         margin-left: 0;\r\n         margin-right: 0;\r\n         box-shadow: 2px 1px 4px var(--black-alpha-color);\r\n      }\r\n\r\n      .inputError {\r\n         border: solid 2px #df1313;\r\n      }\r\n\r\n      .inputErrorMessage {\r\n         width: 80%;\r\n      }\r\n   }\r\n\r\n   .duration,\r\n   .selectDifficulty,\r\n   .selectCountries {\r\n      width: 100%;\r\n   }\r\n`;\r\n\r\nconst SelectSeason = styled.div`\r\n   width: 47%;\r\n   heigth: 100%;\r\n   padding: 2rem 0 0 1rem;\r\n\r\n   input {\r\n      display: inline-block;\r\n      margin-right: 1rem;\r\n   }\r\n\r\n   label {\r\n      cursor: pointer;\r\n   }\r\n`;\r\n\r\nconst CountriesSelected = styled.div`\r\n   width: 47%;\r\n   order: 1;\r\n   margin-top: -4rem;\r\n\r\n   li {\r\n      display: inline-block;\r\n      width: 50px;\r\n      margin: 0.5rem;\r\n      cursor: pointer;\r\n   }\r\n`;\r\n\r\nconst initialState = {\r\n   errors: {},\r\n};\r\n\r\nexport function validate(input) {\r\n   let errors = {};\r\n   if (!input.name) {\r\n      errors.name = \"Nombre de actividad es requerido\";\r\n   } else if (!/^[a-z ,.'-]+$/i.test(input.name)) {\r\n      errors.name = \"Actividad invalida\";\r\n   }\r\n\r\n   return errors;\r\n}\r\n\r\nexport const FormActivity = () => {\r\n   const dispatch = useDispatch();\r\n   const [errors, setErrors] = useState(initialState.errors);\r\n   const [input, setInput] = useState({\r\n      countries: [],\r\n      name: \"\",\r\n      duracion: \"\",\r\n      dificultad: \"\",\r\n      temporada: \"\",\r\n   });\r\n   const [flagsImg, setFlagsImg] = useState([]);\r\n   const allcountries = useSelector((state) => state.allCountries);\r\n\r\n   const handleChange = (e) => {\r\n      setInput({\r\n         ...input,\r\n         [e.target.name]: e.target.value,\r\n      });\r\n\r\n      setErrors(\r\n         validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n         })\r\n      );\r\n   };\r\n\r\n   const handleSelect = (e) => {\r\n      let findCountry =\r\n         allcountries && allcountries.filter((el) => el.ID === e.target.value);\r\n      if (!input.countries.includes(e.target.value)) {\r\n         setFlagsImg([\r\n            ...flagsImg,\r\n            { flag: findCountry[0].flagImg, countryID: findCountry[0].ID },\r\n         ]);\r\n         //console.log(findCountry);\r\n\r\n         setInput({\r\n            ...input,\r\n            countries: [...input.countries, e.target.value],\r\n         });\r\n      }\r\n   };\r\n\r\n   const handleCheck = (e) => {\r\n      if (e.target.checked) {\r\n         setInput({\r\n            ...input,\r\n            temporada: e.target.value,\r\n         });\r\n      }\r\n\r\n      setErrors(\r\n         validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n         })\r\n      );\r\n   };\r\n\r\n   const handleClickFlag = (flagID) => {\r\n      let filterFlag =\r\n         flagsImg && flagsImg.filter((el) => el.countryID !== flagID);\r\n\r\n      setFlagsImg([...filterFlag]);\r\n\r\n      let deletedCountry = input.countries.filter((el) => el !== flagID);\r\n      console.log(flagID, filterFlag, deletedCountry);\r\n\r\n      setInput({\r\n         ...input,\r\n         countries: [...deletedCountry],\r\n      });\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      //console.log(input);\r\n      if (!input.name) {\r\n         Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: \"Escriba una actividad para agregarla\",\r\n         });\r\n      } else {\r\n         Swal.fire({\r\n            title: \"¿Quieres guardar la actividad?\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Save\",\r\n         }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n               dispatch(postActivities(input));\r\n               setInput({\r\n                  countries: [],\r\n                  name: \"\",\r\n                  duracion: \"\",\r\n                  dificultad: \"\",\r\n                  temporada: \"\",\r\n               });\r\n               setFlagsImg([]);\r\n               Swal.fire(\"¡Actividad guardada!\", \"\", \"success\");\r\n            }\r\n         });\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      dispatch(getCountries());\r\n   }, [dispatch]);\r\n\r\n   //console.log(allcountries);\r\n\r\n   return (\r\n      <div className=\"formActivities container margin-auto\">\r\n         <ContainerForm>\r\n            <h2>Crea tu Actividad </h2>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n               <ContainerInputs>\r\n                  <div className=\"activityName\">\r\n                     <label>Actividad:</label>\r\n                     <input\r\n                        className={`inputActivity ${\r\n                           errors.name && \"inputError\"\r\n                        }`}\r\n                        type=\"text\"\r\n                        value={input.name}\r\n                        name=\"name\"\r\n                        onChange={(e) => handleChange(e)}\r\n                     />\r\n                     {errors.name && (\r\n                        <p className=\"inputErrorMessage\">{errors.name}</p>\r\n                     )}\r\n                  </div>\r\n\r\n                  <div className=\"selectCountries\">\r\n                     <label>Pais:</label>\r\n                     <select onChange={(e) => handleSelect(e)}>\r\n                        {/*  <option value=\"0\">Select Country</option> */}\r\n                        {allcountries &&\r\n                           allcountries.map((country, i) => {\r\n                              return (\r\n                                 <option\r\n                                    value={country.ID}\r\n                                    key={country.ID + \"countryOption\"}\r\n                                 >\r\n                                    {country.name}\r\n                                 </option>\r\n                              );\r\n                           })}\r\n                     </select>\r\n                  </div>\r\n\r\n                  <div className=\"duration\">\r\n                     <label>Duracion:</label>\r\n                     <select\r\n                        name=\"duracion\"\r\n                        value={input.duracion}\r\n                        onChange={(e) => handleChange(e)}\r\n                     >\r\n                        <option value=\"0\">Seleccionar Duración</option>\r\n                        <option value=\"30\">30 min</option>\r\n                        <option value=\"1\">1 horas</option>\r\n                        <option value=\"2\">2 horas</option>\r\n                        <option value=\"3\">3 horas</option>\r\n                        <option value=\"4\">4 horas</option>\r\n                        <option value=\"5\">mas de 5 hours</option>\r\n                     </select>\r\n                  </div>\r\n                  <div className=\"selectDifficulty\">\r\n                     <label>Dificultad:</label>\r\n                     <select\r\n                        name=\"dificultad\"\r\n                        value={input.dificultad}\r\n                        onChange={(e) => handleChange(e)}\r\n                     >\r\n                        <option value=\"0\">Seleccionar Dificultad</option>\r\n                        <option value=\"1\">1- Inicial</option>\r\n                        <option value=\"2\">2- Baja</option>\r\n                        <option value=\"3\">3- Media</option>\r\n                        <option value=\"4\">4- Dificil</option>\r\n                        <option value=\"5\">5- Profesional</option>\r\n                     </select>\r\n                  </div>\r\n               </ContainerInputs>\r\n               <SelectSeason>\r\n                  <label>Temporada: </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Verano\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Verano{\" \"}\r\n                  </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Primavera\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Primavera{\" \"}\r\n                  </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Otoño\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Otoño{\" \"}\r\n                  </label>\r\n                  <label>\r\n                     <input\r\n                        type=\"radio\"\r\n                        value=\"Invierno\"\r\n                        name=\"season\"\r\n                        onChange={(e) => handleCheck(e)}\r\n                     />\r\n                     Invierno{\" \"}\r\n                  </label>\r\n               </SelectSeason>\r\n               <CountriesSelected>\r\n                  <ul>\r\n                     {input.countries &&\r\n                        flagsImg.map((el) => {\r\n                           return (\r\n                              <li key={el.countryID + \"flagCountry\"}>\r\n                                 <img\r\n                                    src={el.flag}\r\n                                    alt={\"Flag\" + el.countryID}\r\n                                    onClick={() =>\r\n                                       handleClickFlag(el.countryID)\r\n                                    }\r\n                                 />\r\n                              </li>\r\n                           );\r\n                        })}\r\n                  </ul>\r\n               </CountriesSelected>\r\n\r\n               <button\r\n                  className=\"btnSubmit\"\r\n                  type=\"submit\"\r\n                  disabled={errors.name && true}\r\n               >\r\n                  Crear Actividad\r\n               </button>\r\n            </form>\r\n         </ContainerForm>\r\n      </div>\r\n   );\r\n};\r\n","import \"./App.css\";\nimport Nav from \"./components/Nav.js\";\nimport Home from \"./components/Home.js\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Init from \"./components/Init.js\";\nimport CountryDetails from \"./components/CountryDetails\";\nimport { FormActivity } from \"./components/FormActivities\";\nimport styled from \"styled-components\";\n\nexport const Footer = styled.footer`\n   background-color: var(--gray-dark-color);\n   color: var(--text-light-color);\n   display: flex;\n   justify-content: center;\n   width: 100vw;\n   padding: 3rem 0;\n`;\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <Router>\n            <Nav />\n            <Routes>\n               <Route path=\"/\" element={<Init />} />\n               <Route path=\"/home\" element={<Home />} />\n               <Route path=\"/home/:id\" element={<CountryDetails />} />\n               <Route path=\"/activity\" element={<FormActivity />} />\n            </Routes>\n            <Footer>\n               <p className=\"text-center\">\n                  &copy; ecgonzalez | Todos los derechos reservados\n               </p>\n            </Footer>\n         </Router>\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n   GET_COUNTRIES,\r\n   ADD_ACTIVITY,\r\n   GET_COUNTRIES_BY_NAME,\r\n   //  GET_COUNTRY_DETAILS,\r\n   GET_ACTIVITIES,\r\n   ORDER_BY_NAME,\r\n   FILTER_CONTINENT,\r\n   FILTER_ACTIVITY,\r\n   ORDER_BY_POBLATION,\r\n   GET_LOAD_STATUS,\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n   allCountries: [],\r\n   //\tcountryDetails: [],\r\n   countries: [],\r\n   activities: [],\r\n   isLoading: false,\r\n};\r\n\r\nexport default function rootReducer(state = initialState, actions) {\r\n   switch (actions.type) {\r\n      case GET_LOAD_STATUS:\r\n         return {\r\n            ...state,\r\n            isLoading: actions.payload,\r\n         };\r\n\r\n      case GET_COUNTRIES:\r\n         return {\r\n            ...state,\r\n            countries: actions.payload,\r\n            allCountries: actions.payload,\r\n         };\r\n\r\n      case ADD_ACTIVITY:\r\n         return { ...state };\r\n\r\n      case GET_COUNTRIES_BY_NAME:\r\n         return {\r\n            ...state,\r\n            countries: actions.payload,\r\n         };\r\n\r\n      /* \t\tcase GET_COUNTRY_DETAILS:\r\n\t\t\treturn {\r\n            ...state,\r\n            countryDetails: actions.payload,\r\n         };\r\n */\r\n      case GET_ACTIVITIES:\r\n         return {\r\n            ...state,\r\n            activities: actions.payload,\r\n         };\r\n\r\n      case ORDER_BY_NAME:\r\n         let sortedCountries =\r\n            actions.payload === \"asc\"\r\n               ? state.countries.sort((a, b) => a.name.localeCompare(b.name))\r\n               : actions.payload === \"desc\"\r\n               ? state.countries.sort((a, b) => b.name.localeCompare(a.name))\r\n               : state.countries;\r\n         return {\r\n            ...state,\r\n            countries: sortedCountries,\r\n         };\r\n\r\n      case ORDER_BY_POBLATION:\r\n         let poblationFiltered =\r\n            actions.payload === \"asc\"\r\n               ? state.countries.sort((a, b) => a.population - b.population)\r\n               : actions.payload === \"desc\"\r\n               ? state.countries.sort((a, b) => b.population - a.population)\r\n               : state.countries;\r\n\r\n         return {\r\n            ...state,\r\n            countries: poblationFiltered,\r\n         };\r\n\r\n      case FILTER_CONTINENT:\r\n         const allCountries = state.allCountries;\r\n         const continentFilter =\r\n            actions.payload === \"All\"\r\n               ? allCountries\r\n               : allCountries.filter(\r\n                    (country) => country.continent === actions.payload\r\n                 );\r\n\r\n         return {\r\n            ...state,\r\n            countries: continentFilter,\r\n         };\r\n\r\n      case FILTER_ACTIVITY:\r\n         const allCountriesAct = state.allCountries;\r\n         const activitiesFilter =\r\n            actions.payload === \"All\"\r\n               ? allCountriesAct\r\n               : allCountriesAct.filter(\r\n                    (country) =>\r\n                       country.activities &&\r\n                       country.activities\r\n                          .map((el) => el.name)\r\n                          .includes(actions.payload)\r\n                 );\r\n\r\n         return {\r\n            ...state,\r\n            countries: activitiesFilter,\r\n         };\r\n\r\n      default:\r\n         return { ...state };\r\n   }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeStore = compose;\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeStore(applyMiddleware(thunk))\r\n\t)\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}